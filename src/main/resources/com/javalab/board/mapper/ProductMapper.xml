<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 매퍼XML -->
<!-- 원래 인터페이스에 있던 쿼리문을 분리해서 여기로 이동 -->
<!-- 내가 참조하는 인터페이스 경로와 이름 설정 -->
<mapper namespace="com.javalab.board.mapper.ProductMapperInterface">

	<!-- 쿼리메소드 id="getBoard" : 메소드의 이름으로 인터페이스에 있는 추상메소드와 같아야 한다. resultType="BoardVo" 
		: 쿼리 실행 결과를 담아줄 vo 클래스를 지정한다. BoardVo 별칭은 sqlMapConfig.xml에 정의되어 있다. #{bno} 
		: 쿼리문에 전달될 파라미터로 매퍼인터페이스의 메소드 파라미터 이름과 같아야 한다. PrepardStatement의 ?표와 같은 역할을 
		한다. -->

	<select id="getProduct" resultType="ProductVo">
		select proId, categoryKey_ID, name, img1, img2, img3, img4, img5, content,
		price
		from product
		where proId = #{proId}
	</select>

	<!-- 상품 목록 조회 쿼리 메소드 -->
	<select id="listProduct" resultType="ProductVo">
		select
		proId,
		categoryKey_ID,
		name,
		img1,
		img2,
		img3,
		img4,
		img5,
		content,
		price
		from product
		order by price asc
	</select>

	<!-- 상품 등록 메소드 -->
	<insert id="createProduct" parameterType="ProductVo">
	INSERT INTO PRODUCT (PROID, CATEGORYKEY_ID, NAME, IMG1,IMG2, IMG3, IMG4, IMG5, CONTENT, PRICE) 
	VALUES 
		#{proId}, 
		#{categoryKey_ID},
		#{name},
		#{img1},
		#{img2},
		#{img3},
		#{img4},
		#{img5},
		#{content},
		#{price}
		)
		<!-- insert into product(
		proId,
		categoryKey_ID,
		name,
		img1,
		img2,
		img3,
		img4,
		img5,
		content,
		price)
		values (
		product_seq.nextval,
		#{categoryKey_ID},
		#{name},
		#{img1},
		#{img2},
		#{img3},
		#{img4},
		#{img5},
		#{content},
		#{price}
		) -->
	</insert>

	<!-- 상품 등록 메소드 (selectKey 사용) -->
	<insert id="createProductSelectKey" parameterType="ProductVo">

		<!-- selectKey를 사용하여 시퀀스 값 가져오기 -->
		<selectKey keyProperty="proId" resultType="int"
			order="BEFORE">
			select product_seq.nextval from dual
		</selectKey>
		insert into product(
		proId,
		categoryKey_ID,
		name,
		img1,
		img2,
		img3,
		img4,
		img5,
		content,
		price)
		values (
		#{proId},
		#{categoryKey_ID},
		#{name},
		#{img1},
		#{img2},
		#{img3},
		#{img4},
		#{img5},
		#{content},
		#{price}
		)
	</insert>

	<!-- 상품 수정 메소드 -->
	<update id="updateProduct" parameterType="ProductVo">
		update product
		set categoryKey_ID = #{categoryKey_ID},
		name = #{name},
		img1 = #{img1},
		img2 = #{img2},
		img3 = #{img3},
		img4 = #{img4},
		img5 = #{img5},
		content = #{content},
		price = #{price}
		where proId = #{proId}
	</update>

	<delete id="deleteProduct" parameterType="int"> <!-- 여기 수정 -->
		delete from product
		where proId = #{proId}
	</delete>
</mapper>